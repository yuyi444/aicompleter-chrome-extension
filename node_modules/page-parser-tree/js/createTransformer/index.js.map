{"version":3,"sources":["../../src/createTransformer/index.js"],"names":["createTransformer","scheduler","selectors","transformers","map","item","condFn","liveSet","$or","s","transformer","$watch","attributeFilter","cond","$log","filterFn","value","console","log","el","$filter","$map","transducer","t","compose","ec","parents","filter","Error","JSON","stringify","reduce","combined","x"],"mappings":"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","sourcesContent":["/* @flow */\n\nimport t from 'transducers.js';\nimport type LiveSet from 'live-set';\nimport type Scheduler from 'live-set/Scheduler';\nimport liveSetTransduce from 'live-set/transduce';\nimport liveSetFilter from 'live-set/filter';\nimport liveSetMerge from 'live-set/merge';\n\nimport createCssFn from './createCssFn';\n\nimport watchMutations from './watchMutations';\nimport watchFilteredChildren from './watchFilteredChildren';\n\nimport type { Selector } from '..';\nimport type { ElementContext } from '../internalTypes';\n\nexport default function createTransformer(\n  scheduler: Scheduler,\n  selectors: Array<Selector>\n): (liveSet: LiveSet<ElementContext>) => LiveSet<ElementContext> {\n  const transformers = selectors.map(item => {\n    if (typeof item === 'string') {\n      const condFn = createCssFn(item);\n      return liveSet => watchFilteredChildren(liveSet, condFn);\n    } else if (item.$or) {\n      const transformers = item.$or.map(s => createTransformer(scheduler, s));\n      return liveSet =>\n        liveSetMerge(transformers.map(transformer => transformer(liveSet)));\n    } else if (item.$watch) {\n      const { attributeFilter, cond } = item.$watch;\n      const condFn = typeof cond === 'function' ? cond : createCssFn(cond);\n      return liveSet => watchMutations(liveSet, attributeFilter, condFn);\n    } else if (item.$log) {\n      const { $log } = item;\n      const filterFn = value => {\n        console.log($log, value.el); //eslint-disable-line no-console\n        return true;\n      };\n      return liveSet => liveSetFilter(liveSet, filterFn);\n    } else if (item.$filter) {\n      const { $filter } = item;\n      const filterFn = ({ el }) => $filter(el);\n      return liveSet => liveSetFilter(liveSet, filterFn);\n    } else if (item.$map) {\n      const { $map } = item;\n      const transducer = t.compose(\n        t.map(ec => ({ el: $map(ec.el), parents: ec.parents })),\n        t.filter(ec => ec.el != null)\n      );\n      return liveSet => liveSetTransduce(liveSet, transducer);\n    }\n    throw new Error(`Invalid selector item: ${JSON.stringify(item)}`);\n  });\n\n  return transformers.reduce(\n    (combined, transformer) => {\n      return liveSet => transformer(combined(liveSet));\n    },\n    x => x\n  );\n}\n"],"file":"index.js"}